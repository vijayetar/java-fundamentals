/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.Test;
import static org.junit.Assert.*;

public class AppTest {
    @Test public void testAppHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull("app should have a greeting", classUnderTest.getGreeting());
    }
    @Test public void testCheckLintrOneError(){
        String pathName = "src/main/resources/oneError.js";
        assertEquals("Line 3 is missing semicolon.\n",App.checkLinterError(pathName));
    }
    @Test public void testCheckLintrNoError(){
        String pathName = "src/main/resources/noError.js";
        assertEquals("",App.checkLinterError(pathName));
    }
    @Test public void testCheckLintrEmptyFile(){
        String pathName = "src/main/resources/empty.js";
        assertEquals("Empty File!",App.checkLinterError(pathName));
    }
    @Test public void testCheckLintrFewErrors(){
        String pathName = "src/main/resources/fewErrors.js";
        String expectedString = "Line 3 is missing semicolon.\n" +
                "Line 5 is missing semicolon.\n" +
                "Line 11 is missing semicolon.\n" +
                "Line 13 is missing semicolon.\n" +
                "Line 15 is missing semicolon.\n";
        assertEquals(expectedString,App.checkLinterError(pathName));
    }
    @Test public void testCheckLintrManyErrors(){
        String pathName = "src/main/resources/manyErrors.js";
        String expectedString = "Line 1 is missing semicolon.\n" +
                "Line 2 is missing semicolon.\n" +
                "Line 3 is missing semicolon.\n" +
                "Line 4 is missing semicolon.\n" +
                "Line 5 is missing semicolon.\n" +
                "Line 7 is missing semicolon.\n" +
                "Line 8 is missing semicolon.\n" +
                "Line 9 is missing semicolon.\n" +
                "Line 10 is missing semicolon.\n" +
                "Line 11 is missing semicolon.\n" +
                "Line 13 is missing semicolon.\n" +
                "Line 14 is missing semicolon.\n" +
                "Line 15 is missing semicolon.\n" +
                "Line 16 is missing semicolon.\n" +
                "Line 17 is missing semicolon.\n" +
                "Line 19 is missing semicolon.\n" +
                "Line 20 is missing semicolon.\n" +
                "Line 21 is missing semicolon.\n" +
                "Line 22 is missing semicolon.\n" +
                "Line 23 is missing semicolon.\n" +
                "Line 25 is missing semicolon.\n" +
                "Line 26 is missing semicolon.\n" +
                "Line 27 is missing semicolon.\n" +
                "Line 28 is missing semicolon.\n" +
                "Line 29 is missing semicolon.\n" +
                "Line 30 is missing semicolon.\n" +
                "Line 31 is missing semicolon.\n" +
                "Line 32 is missing semicolon.\n";
        assertEquals(expectedString,App.checkLinterError(pathName));
    }
    @Test public void testExceptions(){
        String expected = "We couldn't find that book, could you get a better filepath?";
        assertEquals(expected, App.checkLinterError("not-a-real-file-path"));
    }
}
